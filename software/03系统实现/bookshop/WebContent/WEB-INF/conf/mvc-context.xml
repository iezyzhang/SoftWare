<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<mvc:annotation-driven />

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.bookshop" ></context:component-scan>

	<!-- 导入属性配置文件 -->
	<context:property-placeholder location="classpath:conf/mysql.properties" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
	</bean>
	
	<bean id="sqlSessionFactory1" name="sqlSessionFactory1"
				class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis-config.xml"/>
	</bean>	
	
	<bean id="session" class="org.mybatis.spring.SqlSessionTemplate">
	    <constructor-arg index="0" ref="sqlSessionFactory1" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 用注解来实现事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- 视图解释类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- 拦截器 -->  
     <mvc:interceptors>   
        <!-- 多个拦截器,顺序执行 -->  
        
        <mvc:interceptor>
        		<mvc:mapping path="/backstage_*"/>
        	
        		<bean class="com.bookshop.system.LoginInterceptor">
        			<property name="excludeUrl" value="/backstage_toLogin,
        			/backstage_checkAdminLoginInfo "/>
	        	</bean>
        		
        </mvc:interceptor>  
        <!-- 多个拦截器,顺序执行 -->  
        <mvc:interceptor>  
           <mvc:mapping path="/*" /><!-- 如果不配置或/*,将拦截所有的Controller -->  
           <bean class="com.bookshop.system.SessionTimeoutInterceptor">
           		<property name="excludeUrl" value="
           		/login,/toLogin,/index,/addUserPage,/addUser,/checkUsername,
           		/checkLoginInfo,/loginOut,/about,/delivery,/news,/contact,/searchProduct,/productDetail,/addToCup,/clearCup,/shoppingCar,/deleteCup,/fontstage_getNoticeContentToFont,/getCategroyRecordList "/>
           		
           </bean>  
        </mvc:interceptor>  
  	</mvc:interceptors> 
	
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="2000000"/>  
    </bean>

	<!-- 对静态资源文件的访问  方案一 （二选一） -->
	<mvc:default-servlet-handler />
</beans>